{"mappings":"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","sources":["src/js/weekly-trends.js","src/js/stars.js"],"sourcesContent":["import { emptyStar, fullStar, halfStar } from './stars';\n\nconst axios = require('axios').default;\n\nconst API_KEY = '992758a4802a699e8df27d4d6efc34fb';\nconst URL = 'https://api.themoviedb.org/3';\n\nconst weeklyTrendsList = document.querySelector('.weekly-trends__list');\n\nasync function getWeeklyTrends() {\n  const response = await axios.get(`${URL}/trending/all/week?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n}\n\nasync function doMarkup() {\n  const movies = await getWeeklyTrends();\n  let threeMovie = movies.slice(0, 3);\n  console.log(movies);\n\n  renderMoviesCards(threeMovie);\n}\n\ndoMarkup();\n\nexport default async function renderMoviesCards(movies) {\n  // в каталоге рендерится в ul c классом cards__list\n  const movieList = document.querySelector('.cards__list');\n  const POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\n  let markup = '';\n  for (const movie of movies) {\n    const {\n      id,\n      poster_path: poster,\n      title,\n      release_date: date,\n      vote_average: rating,\n    } = movie;\n\n    // Проверка на картинку, можно что-то придумать чтоб грузилось другое\n    if (poster === null || !poster) {\n      continue; // пропускаем фильм без картинки\n    }\n\n    const movieImg = POSTER_URL + poster;\n    const movieGenre = await getGenre(id);\n    const movieYear = await getYear(date);\n    const starRating = await createStarRating(rating);\n    // Надо добавить классы\n    markup += `<li class='weekly-trends__item'>\n                    <img class='weekly-trends__image' src='${movieImg}' alt='${title}' width='395' height='574' />\n                    <div class=\"weekly-trends__overlay\"></div>\n                    <div class='weekly-trends__desc'>\n                        \n                        <h3 class='weekly-trends__name'>${title}</h3>\n                        <div class='weekly-trends__data'>\n                        <p class='weekly-trends__ganre'>${movieGenre} <span class='weekly-trends__year'>${movieYear}</span></p>\n                        <div class='weekly-trends__stars'>${starRating}</div>\n                        </div>\n                    </div>\n                </li>`;\n  }\n\n  weeklyTrendsList.innerHTML = markup;\n}\n\n// Получает год из даты\nfunction getYear(data) {\n  if (!data) {\n    return 'There is no release date';\n  }\n\n  return (year = data.slice(0, 4));\n}\n\n// Получает жанры фильма\nasync function getGenre(movieId) {\n  const API_KEY = '992758a4802a699e8df27d4d6efc34fb';\n  const URL = 'https://api.themoviedb.org/3/movie/';\n\n  try {\n    const response = await axios.get(`${URL}${movieId}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    if (response.data.genres.length === 0) {\n      return error;\n    }\n\n    const genres = response.data.genres\n      .slice(0, 2)\n      .map(genre => genre.name)\n      .join(', ');\n\n    return genres;\n  } catch (error) {\n    console.log(error);\n    return 'There are no genres';\n  }\n}\n\n// Преобразует рейтинг в рейтинг из звезд\nfunction createStarRating(data) {\n  let ratingStars = '';\n\n  if (!data) {\n    ratingStars = `${emptyStar.repeat(5)}`;\n    return `<div>${ratingStars}</div>`;\n  }\n\n  const rating = Math.round(data);\n\n  switch (rating) {\n    case 0:\n      ratingStars = `${emptyStar.repeat(5)}`;\n      break;\n    case 1:\n      ratingStars = `${halfStar}${emptyStar.repeat(4)}`;\n      break;\n    case 2:\n      ratingStars = `${fullStar}${emptyStar.repeat(4)}`;\n      break;\n    case 3:\n      ratingStars = `${fullStar}${halfStar}${emptyStar.repeat(3)}`;\n      break;\n    case 4:\n      ratingStars = `${fullStar.repeat(2)}${emptyStar.repeat(3)}`;\n      break;\n    case 5:\n      ratingStars = `${fullStar.repeat(2)}${halfStar}${emptyStar.repeat(2)}`;\n      break;\n    case 6:\n      ratingStars = `${fullStar.repeat(3)}${emptyStar.repeat(2)}`;\n      break;\n    case 7:\n      ratingStars = `${fullStar.repeat(3)}${halfStar}${emptyStar}`;\n      break;\n    case 8:\n      ratingStars = `${fullStar.repeat(4)}${emptyStar}`;\n      break;\n    case 9:\n      ratingStars = `${fullStar.repeat(4)}${halfStar}`;\n      break;\n    case 10:\n      ratingStars = `${fullStar.repeat(5)}`;\n      break;\n    default:\n      throw new Error('Invalid rating');\n  }\n\n  return `<div>${ratingStars}</div>`;\n}\n","const emptyStar = `<svg class=\"star\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M16.875 7.3125H10.8281L9 1.6875L7.17188 7.3125H1.125L6.04688 10.6875L4.14844 16.3125L9 12.7969L13.8516 16.3125L11.9531 10.6875L16.875 7.3125Z\" stroke=\"url(#paint0_linear_405_766)\" stroke-linejoin=\"round\"/>\n<defs>\n<linearGradient id=\"paint0_linear_405_766\" x1=\"3.375\" y1=\"2.625\" x2=\"13.5\" y2=\"16.5\" gradientUnits=\"userSpaceOnUse\">\n<stop stop-color=\"#F84119\"/>\n<stop offset=\"1\" stop-color=\"#F89F19\" stop-opacity=\"0.68\"/>\n</linearGradient>\n</defs>\n</svg>`;\n\nconst fullStar = `<svg class=\"star\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"rgba(248, 65, 25, 1)\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M16.875 7.3125H10.8281L9 1.6875L7.17188 7.3125H1.125L6.04688 10.6875L4.14844 16.3125L9 12.7969L13.8516 16.3125L11.9531 10.6875L16.875 7.3125Z\" stroke=\"url(#paint0_linear_405_766)\" stroke-linejoin=\"round\"/>\n<defs>\n<linearGradient id=\"paint0_linear_405_766\" x1=\"3.375\" y1=\"2.625\" x2=\"13.5\" y2=\"16.5\" gradientUnits=\"userSpaceOnUse\">\n<stop stop-color=\"#F84119\"/>\n<stop offset=\"1\" stop-color=\"#F89F19\" stop-opacity=\"0.68\"/>\n</linearGradient>\n</defs>\n</svg>`;\n\nconst halfStar = `<svg class=\"star\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M16.875 7.3125H10.8281L9 1.6875L7.17188 7.3125H1.125L6.04688 10.6875L4.14844 16.3125L9 12.7969L13.8516 16.3125L11.9531 10.6875L16.875 7.3125Z\" stroke=\"url(#paint0_linear_148_6991)\" stroke-linejoin=\"round\"/>\n<path d=\"M9 1.6875V12.7969L4.14844 16.3125L6.04688 10.6875L1.125 7.3125H7.17188L9 1.6875Z\" fill=\"url(#paint1_linear_148_6991)\"/>\n<defs>\n<linearGradient id=\"paint0_linear_148_6991\" x1=\"3.04877\" y1=\"2.73251\" x2=\"13.478\" y2=\"16.7124\" gradientUnits=\"userSpaceOnUse\">\n<stop stop-color=\"#F84119\"/>\n<stop offset=\"1\" stop-color=\"#F89F19\" stop-opacity=\"0.68\"/>\n</linearGradient>\n<linearGradient id=\"paint1_linear_148_6991\" x1=\"2.08688\" y1=\"2.73251\" x2=\"12.1506\" y2=\"9.47748\" gradientUnits=\"userSpaceOnUse\">\n<stop stop-color=\"#F84119\"/>\n<stop offset=\"1\" stop-color=\"#F89F19\" stop-opacity=\"0.68\"/>\n</linearGradient>\n</defs>\n</svg>`;\n\n\nexport { emptyStar, fullStar, halfStar };"],"names":["$bpxeT","parcelRequire","$c97e119824cb45d1$export$2b9da15ffb823cb5","$c97e119824cb45d1$export$cf0b3d5a3c4c1ede","$c97e119824cb45d1$export$2f488d1c4c14505e","default","$fe3a3a1ac89f0559$var$API_KEY","$fe3a3a1ac89f0559$var$URL","$fe3a3a1ac89f0559$var$weeklyTrendsList","document","querySelector","$fe3a3a1ac89f0559$var$getWeeklyTrends","$fe3a3a1ac89f0559$var$_getWeeklyTrends","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","response","$fe3a3a1ac89f0559$require$axios","get","concat","params","api_key","_ctx","sent","data","results","$fe3a3a1ac89f0559$var$_doMarkup","movies","threeMovie","slice","console","log","$fe3a3a1ac89f0559$export$2e2bcd8739ae039","$fe3a3a1ac89f0559$var$_renderMoviesCards","POSTER_URL","markup","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","movie","id","poster","title","date","rating","movieImg","movieGenre","movieYear","starRating","undefined","Symbol","iterator","next","done","value","poster_path","release_date","vote_average","$fe3a3a1ac89f0559$var$getGenre","$fe3a3a1ac89f0559$var$getYear","$fe3a3a1ac89f0559$var$createStarRating","t0","return","innerHTML","year","movieId","$fe3a3a1ac89f0559$var$_getGenre","genres","length","error","map","genre","name","join","ratingStars","repeat","Math","round","Error","$fe3a3a1ac89f0559$var$doMarkup"],"version":3,"file":"index.1ce62df2.js.map"}