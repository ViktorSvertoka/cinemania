{"mappings":"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","sources":["src/js/catalog.js","src/js/api-service-main.js","<<jsx-config-pragma.js>>","src/js/cards-rendering.js"],"sourcesContent":["import APIService from './api-service-main';\nimport renderMoviesCards from './cards-rendering';\n\nconst movieList = document.querySelector('.cards__list');\nconst messageNoMovie = document.querySelector('.cards__message');\nconst searchForm = document.getElementById('search-form');\nconst searchInput = document.getElementById('searchQuery');\n\nconst apiService = new APIService();\nsetCatalogCards(); \nsearchForm.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  movieList.innerHTML = '';\n\n  searchValue = searchInput.value.trim();\n\n  if (!searchValue) {\n    return;\n  }\n\n  movieList.classList.remove('visually-hidden');\n    messageNoMovie.classList.add('visually-hidden');\n\n  searchMovies(searchValue);\n}\n\nasync function setCatalogCards() {\n\n  try {\n    const response = await apiService.getTrends('week');\n\n    if (response.length === 0 || !response) {\n      return error\n    }\n\n    const movies = response.slice(0, 10);\n\n    renderMoviesCards(movies);\n  } catch (error) {\n    console.log(error);\n    movieList.classList.add('visually-hidden');\n    messageNoMovie.classList.remove('visually-hidden');\n  }\n}\n\nasync function searchMovies(query) {\n\n  try {\n    const response = await apiService.searchMovieByQuery(query);\n\n    if (response.length === 0 || !response) {\n      return error\n    }\n\n    const movies = response.slice(0, 10);\n\n    renderMoviesCards(movies);\n  } catch (error) {\n    console.log(error);\n    movieList.classList.add('visually-hidden');\n    messageNoMovie.classList.remove('visually-hidden');\n  }\n}\n","import axios from 'axios';\n\nexport default class APIService {\n  constructor() {\n    this.key = '992758a4802a699e8df27d4d6efc34fb';\n    this.baseURL = 'https://api.themoviedb.org/3/';\n    this.page = 1;\n  }\n\n  incrementPage() {\n    this.page += 1;\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n\n  async getTrends(param) {\n    try {\n      const response = await axios.get(\n        `${this.baseURL}trending/movie/${param}?api_key=${this.key}`\n      );\n\n      console.log(response.data.results);\n\n      return response.data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getUpcoming() {\n    try {\n      const response = await axios.get(\n        `${this.baseURL}movie/upcoming?api_key=${this.key}`\n      );\n\n      console.log(response.data.results);\n\n      return response.data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async searchMovieByQuery(query) {\n    try {\n      const response = await axios.get(\n        `${this.baseURL}search/movie?api_key=${this.key}&query=${query}`\n      );\n\n      this.incrementPage();\n\n      console.log(response.data.results);\n\n      return response.data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getMovieInfo(id) {\n    try {\n      const response = await axios.get(\n        `${this.baseURL}movie/${id}?api_key=${this.key}`\n      );\n\n      console.log(response.data);\n\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getMovieTrailer(id) {\n    try {\n      const response = await axios.get(\n        `${this.baseURL}movie/${id}/videos?api_key=${this.key}`\n      );\n\n      console.log(response.data.results[0]);\n\n      return response.data.results[0];\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getGenresList() {\n    try {\n      const response = await axios.get(\n        `${this.baseURL}genre/movie/list?api_key=${this.key}`\n      );\n\n      console.log(response.data.genres);\n\n      return response.data.genres;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getMovieContries() {\n    try {\n      const response = await axios.get(\n        `${this.baseURL}configuration/countries?api_key=${this.key}`\n      );\n\n      console.log(response.data);\n\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n",null,"import { emptyStar, fullStar, halfStar } from './stars';\nconst axios = require('axios').default;\n\nexport default async function renderMoviesCards(movies) {\n  // в каталоге рендерится в ul c классом cards__list\n  const movieList = document.querySelector('.cards__list');\n  const POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\n  let markup = '';\n  for (const movie of movies) {\n    const {\n      id,\n      poster_path: poster,\n      title,\n      release_date: date,\n      vote_average: rating,\n    } = movie;\n\n    // Проверка на картинку, можно что-то придумать чтоб грузилось другое\n    if (poster === null || !poster) {\n      continue; // пропускаем фильм без картинки\n    }\n\n    const movieImg = POSTER_URL + poster;\n    const movieGenre = await getGenre(id);\n    const movieYear = await getYear(date);\n    const starRating = await createStarRating(rating);\n    // Надо добавить классы\n    markup += `<li class='cards__list__item'>\n                    <img src='${movieImg}' alt='${title}' width='395' height='574' />\n                    <div>\n                        <h3>${title}</h3>\n                        <p>${movieGenre} <span>${movieYear}</span></p>\n                        ${starRating}\n                    </div>\n                </li>`;\n  }\n\n  movieList.innerHTML = markup;\n}\n\n// Получает год из даты\nfunction getYear(data) {\n  if (!data) {\n    return 'There is no release date';\n  }\n\n  return (year = data.slice(0, 4));\n}\n\n// Получает жанры фильма\nasync function getGenre(movieId) {\n  const API_KEY = '992758a4802a699e8df27d4d6efc34fb';\n  const URL = 'https://api.themoviedb.org/3/movie/';\n\n  try {\n    const response = await axios.get(`${URL}${movieId}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    if (response.data.genres.length === 0) {\n      return error;\n    }\n\n    const genres = response.data.genres\n      .slice(0, 2)\n      .map(genre => genre.name)\n      .join(', ');\n\n    return genres;\n  } catch (error) {\n    console.log(error);\n    return 'There are no genres';\n  }\n}\n\n// Преобразует рейтинг в рейтинг из звезд\nfunction createStarRating(data) {\n  let ratingStars = '';\n\n  if (!data) {\n    ratingStars = `${emptyStar.repeat(5)}`;\n    return `<div>${ratingStars}</div>`;\n  }\n\n  const rating = Math.round(data);\n\n  switch (rating) {\n    case 0:\n      ratingStars = `${emptyStar.repeat(5)}`;\n      break;\n    case 1:\n      ratingStars = `${halfStar}${emptyStar.repeat(4)}`;\n      break;\n    case 2:\n      ratingStars = `${fullStar}${emptyStar.repeat(4)}`;\n      break;\n    case 3:\n      ratingStars = `${fullStar}${halfStar}${emptyStar.repeat(3)}`;\n      break;\n    case 4:\n      ratingStars = `${fullStar.repeat(2)}${emptyStar.repeat(3)}`;\n      break;\n    case 5:\n      ratingStars = `${fullStar.repeat(2)}${halfStar}${emptyStar.repeat(2)}`;\n      break;\n    case 6:\n      ratingStars = `${fullStar.repeat(3)}${emptyStar.repeat(2)}`;\n      break;\n    case 7:\n      ratingStars = `${fullStar.repeat(3)}${halfStar}${emptyStar}`;\n      break;\n    case 8:\n      ratingStars = `${fullStar.repeat(4)}${emptyStar}`;\n      break;\n    case 9:\n      ratingStars = `${fullStar.repeat(4)}${halfStar}`;\n      break;\n    case 10:\n      ratingStars = `${fullStar.repeat(5)}`;\n      break;\n    default:\n      throw new Error('Invalid rating');\n  }\n\n  return `<div>${ratingStars}</div>`;\n}\n"],"names":["$bpxeT","parcelRequire","$569da6f862471c70$export$2e2bcd8739ae039","APIService","this","key","baseURL","page","param","$parcel$interopDefault","$2TvXO","mark","_callee","response","$dIxxU","default","get","concat","_this","_ctx","sent","console","log","data","results","t0","query","incrementPage","id","genres","movies","$a2bd6f3343f51653$var$_renderMoviesCards","apply","arguments","movieList","POSTER_URL","markup","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","movie","poster","title","date","rating","movieImg","movieGenre","movieYear","starRating","document","querySelector","undefined","Symbol","iterator","next","done","value","poster_path","release_date","vote_average","$a2bd6f3343f51653$var$getGenre","$a2bd6f3343f51653$var$getYear","$a2bd6f3343f51653$var$createStarRating","return","innerHTML","year","slice","movieId","$a2bd6f3343f51653$var$_getGenre","$a2bd6f3343f51653$require$axios","params","api_key","length","error","map","genre","name","join","ratingStars","$hixsh","emptyStar","repeat","Math","round","halfStar","fullStar","Error","$01039996e00cb7ba$var$movieList","$01039996e00cb7ba$var$messageNoMovie","$01039996e00cb7ba$var$searchForm","getElementById","$01039996e00cb7ba$var$searchInput","$01039996e00cb7ba$var$apiService","$01039996e00cb7ba$var$_setCatalogCards","getTrends","$a2bd6f3343f51653$export$2e2bcd8739ae039","classList","add","remove","$01039996e00cb7ba$var$_searchMovies","searchMovieByQuery","$01039996e00cb7ba$var$setCatalogCards","addEventListener","e","preventDefault","searchValue","trim","$01039996e00cb7ba$var$searchMovies"],"version":3,"file":"catalog.ba7bac80.js.map"}