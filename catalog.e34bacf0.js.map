{"mappings":"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","sources":["src/js/catalog.js","src/js/stars.js","src/js/cards-rendering.js"],"sourcesContent":["import APIService from './api-service-main';\nimport renderMoviesCards from './cards-rendering';\n\nconst movieList = document.querySelector('.cards__list');\nconst messageNoMovie = document.querySelector('.cards__message');\nconst searchForm = document.getElementById('search-form');\nconst searchInput = document.getElementById('searchQuery');\n\nconst apiService = new APIService();\nsetCatalogCards(); \nsearchForm.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  movieList.innerHTML = '';\n\n  searchValue = searchInput.value.trim();\n\n  if (!searchValue) {\n    return;\n  }\n\n  movieList.classList.remove('visually-hidden');\n    messageNoMovie.classList.add('visually-hidden');\n\n  searchMovies(searchValue);\n}\n\nasync function setCatalogCards() {\n\n  try {\n    const response = await apiService.getTrends('week');\n\n    if (response.length === 0 || !response) {\n      return error\n    }\n\n    const movies = response.slice(0, 10);\n\n    renderMoviesCards(movies);\n  } catch (error) {\n    console.log(error);\n    movieList.classList.add('visually-hidden');\n    messageNoMovie.classList.remove('visually-hidden');\n  }\n}\n\nasync function searchMovies(query) {\n\n  try {\n    const response = await apiService.searchMovieByQuery(query);\n\n    if (response.length === 0 || !response) {\n      return error\n    }\n\n    const movies = response.slice(0, 10);\n\n    renderMoviesCards(movies);\n  } catch (error) {\n    console.log(error);\n    movieList.classList.add('visually-hidden');\n    messageNoMovie.classList.remove('visually-hidden');\n  }\n}\n","const emptyStar = `<svg class=\"star\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M16.875 7.3125H10.8281L9 1.6875L7.17188 7.3125H1.125L6.04688 10.6875L4.14844 16.3125L9 12.7969L13.8516 16.3125L11.9531 10.6875L16.875 7.3125Z\" stroke=\"url(#paint0_linear_405_766)\" stroke-linejoin=\"round\"/>\n<defs>\n<linearGradient id=\"paint0_linear_405_766\" x1=\"3.375\" y1=\"2.625\" x2=\"13.5\" y2=\"16.5\" gradientUnits=\"userSpaceOnUse\">\n<stop stop-color=\"#F84119\"/>\n<stop offset=\"1\" stop-color=\"#F89F19\" stop-opacity=\"0.68\"/>\n</linearGradient>\n</defs>\n</svg>`;\n\nconst fullStar = `<svg class=\"star\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"rgba(248, 65, 25, 1)\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M16.875 7.3125H10.8281L9 1.6875L7.17188 7.3125H1.125L6.04688 10.6875L4.14844 16.3125L9 12.7969L13.8516 16.3125L11.9531 10.6875L16.875 7.3125Z\" stroke=\"url(#paint0_linear_405_766)\" stroke-linejoin=\"round\"/>\n<defs>\n<linearGradient id=\"paint0_linear_405_766\" x1=\"3.375\" y1=\"2.625\" x2=\"13.5\" y2=\"16.5\" gradientUnits=\"userSpaceOnUse\">\n<stop stop-color=\"#F84119\"/>\n<stop offset=\"1\" stop-color=\"#F89F19\" stop-opacity=\"0.68\"/>\n</linearGradient>\n</defs>\n</svg>`;\n\nconst halfStar = `<svg class=\"star\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M16.875 7.3125H10.8281L9 1.6875L7.17188 7.3125H1.125L6.04688 10.6875L4.14844 16.3125L9 12.7969L13.8516 16.3125L11.9531 10.6875L16.875 7.3125Z\" stroke=\"url(#paint0_linear_148_6991)\" stroke-linejoin=\"round\"/>\n<path d=\"M9 1.6875V12.7969L4.14844 16.3125L6.04688 10.6875L1.125 7.3125H7.17188L9 1.6875Z\" fill=\"url(#paint1_linear_148_6991)\"/>\n<defs>\n<linearGradient id=\"paint0_linear_148_6991\" x1=\"3.04877\" y1=\"2.73251\" x2=\"13.478\" y2=\"16.7124\" gradientUnits=\"userSpaceOnUse\">\n<stop stop-color=\"#F84119\"/>\n<stop offset=\"1\" stop-color=\"#F89F19\" stop-opacity=\"0.68\"/>\n</linearGradient>\n<linearGradient id=\"paint1_linear_148_6991\" x1=\"2.08688\" y1=\"2.73251\" x2=\"12.1506\" y2=\"9.47748\" gradientUnits=\"userSpaceOnUse\">\n<stop stop-color=\"#F84119\"/>\n<stop offset=\"1\" stop-color=\"#F89F19\" stop-opacity=\"0.68\"/>\n</linearGradient>\n</defs>\n</svg>`;\n\n\nexport { emptyStar, fullStar, halfStar };","import { emptyStar, fullStar, halfStar } from './stars';\nconst axios = require('axios').default;\n\nexport default async function renderMoviesCards(movies) {\n  // в каталоге рендерится в ul c классом cards__list\n  const movieList = document.querySelector('.cards__list');\n  const POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\n  let markup = '';\n  for (const movie of movies) {\n    const {\n      id,\n      poster_path: poster,\n      title,\n      release_date: date,\n      vote_average: rating,\n    } = movie;\n\n    // Проверка на картинку, можно что-то придумать чтоб грузилось другое\n    if (poster === null || !poster) {\n      continue; // пропускаем фильм без картинки\n    }\n\n    const movieImg = POSTER_URL + poster;\n    const movieGenre = await getGenre(id);\n    const movieYear = await getYear(date);\n    const starRating = await createStarRating(rating);\n    // Надо добавить классы\n    markup += `<li class='cards__list__item'>\n                    <img src='${movieImg}' alt='${title}' width='395' height='574' />\n                    <div>\n                        <h3>${title}</h3>\n                        <p>${movieGenre} <span>${movieYear}</span></p>\n                        ${starRating}\n                    </div>\n                </li>`;\n  }\n\n  movieList.innerHTML = markup;\n}\n\n// Получает год из даты\nfunction getYear(data) {\n  if (!data) {\n    return 'There is no release date';\n  }\n\n  return (year = data.slice(0, 4));\n}\n\n// Получает жанры фильма\nasync function getGenre(movieId) {\n  const API_KEY = '992758a4802a699e8df27d4d6efc34fb';\n  const URL = 'https://api.themoviedb.org/3/movie/';\n\n  try {\n    const response = await axios.get(`${URL}${movieId}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    if (response.data.genres.length === 0) {\n      return error;\n    }\n\n    const genres = response.data.genres\n      .slice(0, 2)\n      .map(genre => genre.name)\n      .join(', ');\n\n    return genres;\n  } catch (error) {\n    console.log(error);\n    return 'There are no genres';\n  }\n}\n\n// Преобразует рейтинг в рейтинг из звезд\nfunction createStarRating(data) {\n  let ratingStars = '';\n\n  if (!data) {\n    ratingStars = `${emptyStar.repeat(5)}`;\n    return `<div>${ratingStars}</div>`;\n  }\n\n  const rating = Math.round(data);\n\n  switch (rating) {\n    case 0:\n      ratingStars = `${emptyStar.repeat(5)}`;\n      break;\n    case 1:\n      ratingStars = `${halfStar}${emptyStar.repeat(4)}`;\n      break;\n    case 2:\n      ratingStars = `${fullStar}${emptyStar.repeat(4)}`;\n      break;\n    case 3:\n      ratingStars = `${fullStar}${halfStar}${emptyStar.repeat(3)}`;\n      break;\n    case 4:\n      ratingStars = `${fullStar.repeat(2)}${emptyStar.repeat(3)}`;\n      break;\n    case 5:\n      ratingStars = `${fullStar.repeat(2)}${halfStar}${emptyStar.repeat(2)}`;\n      break;\n    case 6:\n      ratingStars = `${fullStar.repeat(3)}${emptyStar.repeat(2)}`;\n      break;\n    case 7:\n      ratingStars = `${fullStar.repeat(3)}${halfStar}${emptyStar}`;\n      break;\n    case 8:\n      ratingStars = `${fullStar.repeat(4)}${emptyStar}`;\n      break;\n    case 9:\n      ratingStars = `${fullStar.repeat(4)}${halfStar}`;\n      break;\n    case 10:\n      ratingStars = `${fullStar.repeat(5)}`;\n      break;\n    default:\n      throw new Error('Invalid rating');\n  }\n\n  return `<div>${ratingStars}</div>`;\n}\n"],"names":["$bpxeT","parcelRequire","$c97e119824cb45d1$export$2b9da15ffb823cb5","$c97e119824cb45d1$export$cf0b3d5a3c4c1ede","$c97e119824cb45d1$export$2f488d1c4c14505e","default","movies","$a2bd6f3343f51653$var$_renderMoviesCards","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","movieList","POSTER_URL","markup","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","movie","id","poster","title","date","rating","movieImg","movieGenre","movieYear","starRating","document","querySelector","undefined","Symbol","iterator","next","done","value","poster_path","release_date","vote_average","$a2bd6f3343f51653$var$getGenre","_ctx","sent","$a2bd6f3343f51653$var$getYear","$a2bd6f3343f51653$var$createStarRating","concat","t0","return","innerHTML","data","year","slice","movieId","$a2bd6f3343f51653$var$_getGenre","response","genres","$a2bd6f3343f51653$require$axios","get","params","api_key","length","error","map","genre","name","join","console","log","ratingStars","repeat","Math","round","Error","$01039996e00cb7ba$var$movieList","$01039996e00cb7ba$var$messageNoMovie","$01039996e00cb7ba$var$searchForm","getElementById","$01039996e00cb7ba$var$searchInput","$01039996e00cb7ba$var$apiService","$7r3lF","$01039996e00cb7ba$var$_setCatalogCards","getTrends","$a2bd6f3343f51653$export$2e2bcd8739ae039","classList","add","remove","$01039996e00cb7ba$var$_searchMovies","query","searchMovieByQuery","$01039996e00cb7ba$var$setCatalogCards","addEventListener","e","preventDefault","searchValue","trim","$01039996e00cb7ba$var$searchMovies"],"version":3,"file":"catalog.e34bacf0.js.map"}