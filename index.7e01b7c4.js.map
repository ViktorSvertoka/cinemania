{"mappings":"oeAAA,MAAMA,EAAY,okBAUZC,EAAW,olBAUXC,EAAW,g8B,iBClBXC,QAEN,MAGMC,EAAmBC,SAASC,cAAc,wBA+D/B,SAARC,EAAQC,GACf,OAAKA,EAIGC,KAAOD,EAAKE,MAAM,EAAG,GAHpB,0B,CAOQC,eAAJC,EAASC,GAItB,IACE,MAAMC,QAAiBC,EAAMC,IAAI,sCAASH,IAAW,CACnDI,OAAQ,CACNC,QANU,sCAUd,GAAoC,IAAhCJ,EAASN,KAAKW,OAAOC,OACvB,OAAOC,MAQT,OALeP,EAASN,KAAKW,OAC1BT,MAAM,EAAG,GACTY,KAAIC,GAASA,EAAMC,OACnBC,KAAK,K,CAGR,MAAOJ,GAEP,OADAK,QAAQC,IAAIN,GACL,qB,EAKX,SAASO,EAAiBpB,GACxB,IAAIqB,EAAc,GAElB,IAAKrB,EAEH,OADAqB,EAAc,GAAG7B,EAAU8B,OAAO,KAC3B,QAAQD,UAKjB,OAFeE,KAAKC,MAAMxB,IAGxB,KAAK,EACHqB,EAAc,GAAG7B,EAAU8B,OAAO,KAClC,MACF,KAAK,EACHD,EAAc,GAAG3B,IAAWF,EAAU8B,OAAO,KAC7C,MACF,KAAK,EACHD,EAAc,GAAG5B,IAAWD,EAAU8B,OAAO,KAC7C,MACF,KAAK,EACHD,EAAc,GAAG5B,IAAWC,IAAWF,EAAU8B,OAAO,KACxD,MACF,KAAK,EACHD,EAAc,GAAG5B,EAAS6B,OAAO,KAAK9B,EAAU8B,OAAO,KACvD,MACF,KAAK,EACHD,EAAc,GAAG5B,EAAS6B,OAAO,KAAK5B,IAAWF,EAAU8B,OAAO,KAClE,MACF,KAAK,EACHD,EAAc,GAAG5B,EAAS6B,OAAO,KAAK9B,EAAU8B,OAAO,KACvD,MACF,KAAK,EACHD,EAAc,GAAG5B,EAAS6B,OAAO,KAAK5B,IAAWF,IACjD,MACF,KAAK,EACH6B,EAAc,GAAG5B,EAAS6B,OAAO,KAAK9B,IACtC,MACF,KAAK,EACH6B,EAAc,GAAG5B,EAAS6B,OAAO,KAAK5B,IACtC,MACF,KAAK,GACH2B,EAAc,GAAG5B,EAAS6B,OAAO,KACjC,MACF,QACE,MAAM,IAAIG,MAAM,kBAGpB,MAAO,QAAQJ,S,EAzIjBlB,iBACE,MAAMuB,QAVRvB,iBAME,aALuBI,EAAMC,IAAI,kDAA6B,CAC5DC,OAAQ,CACNC,QARU,uCAWEV,KAAK2B,O,CAIAC,GACrB,IAAIC,EAAaH,EAAOxB,MAAM,EAAG,GACjCgB,QAAQC,IAAIO,GAOCvB,eAAiCuB,GAE5B7B,SAASC,cAAc,gBAAd,MACrBgC,EAAa,mCACnB,IAAIC,EAAS,GACb,IAAK,MAAMC,KAASN,EAAQ,CAC1B,MAAMO,GACJA,EACAC,YAAaC,EAAMC,MACnBA,EACAC,aAAcC,EACdC,aAAcC,GACZR,EAGoD,GAAzC,OAAXG,IAAoBA,EACtB,SAQgBJ,GAAR,gGALOD,EAAaK,WAM6CC,4OAIrBA,oIAT7BhC,EAAS6B,8CACVlC,EAAQuC,kFACPlB,EAAiBoB,6F,CAgB5C5C,EAAiB6C,UAAYV,C,CA3C7BW,CAAkBb,E,CAGpBc","sources":["src/js/stars.js","src/js/weekly-trends.js"],"sourcesContent":["const emptyStar = `<svg class=\"star\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M16.875 7.3125H10.8281L9 1.6875L7.17188 7.3125H1.125L6.04688 10.6875L4.14844 16.3125L9 12.7969L13.8516 16.3125L11.9531 10.6875L16.875 7.3125Z\" stroke=\"url(#paint0_linear_405_766)\" stroke-linejoin=\"round\"/>\n<defs>\n<linearGradient id=\"paint0_linear_405_766\" x1=\"3.375\" y1=\"2.625\" x2=\"13.5\" y2=\"16.5\" gradientUnits=\"userSpaceOnUse\">\n<stop stop-color=\"#F84119\"/>\n<stop offset=\"1\" stop-color=\"#F89F19\" stop-opacity=\"0.68\"/>\n</linearGradient>\n</defs>\n</svg>`;\n\nconst fullStar = `<svg class=\"star\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"rgba(248, 65, 25, 1)\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M16.875 7.3125H10.8281L9 1.6875L7.17188 7.3125H1.125L6.04688 10.6875L4.14844 16.3125L9 12.7969L13.8516 16.3125L11.9531 10.6875L16.875 7.3125Z\" stroke=\"url(#paint0_linear_405_766)\" stroke-linejoin=\"round\"/>\n<defs>\n<linearGradient id=\"paint0_linear_405_766\" x1=\"3.375\" y1=\"2.625\" x2=\"13.5\" y2=\"16.5\" gradientUnits=\"userSpaceOnUse\">\n<stop stop-color=\"#F84119\"/>\n<stop offset=\"1\" stop-color=\"#F89F19\" stop-opacity=\"0.68\"/>\n</linearGradient>\n</defs>\n</svg>`;\n\nconst halfStar = `<svg class=\"star\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M16.875 7.3125H10.8281L9 1.6875L7.17188 7.3125H1.125L6.04688 10.6875L4.14844 16.3125L9 12.7969L13.8516 16.3125L11.9531 10.6875L16.875 7.3125Z\" stroke=\"url(#paint0_linear_148_6991)\" stroke-linejoin=\"round\"/>\n<path d=\"M9 1.6875V12.7969L4.14844 16.3125L6.04688 10.6875L1.125 7.3125H7.17188L9 1.6875Z\" fill=\"url(#paint1_linear_148_6991)\"/>\n<defs>\n<linearGradient id=\"paint0_linear_148_6991\" x1=\"3.04877\" y1=\"2.73251\" x2=\"13.478\" y2=\"16.7124\" gradientUnits=\"userSpaceOnUse\">\n<stop stop-color=\"#F84119\"/>\n<stop offset=\"1\" stop-color=\"#F89F19\" stop-opacity=\"0.68\"/>\n</linearGradient>\n<linearGradient id=\"paint1_linear_148_6991\" x1=\"2.08688\" y1=\"2.73251\" x2=\"12.1506\" y2=\"9.47748\" gradientUnits=\"userSpaceOnUse\">\n<stop stop-color=\"#F84119\"/>\n<stop offset=\"1\" stop-color=\"#F89F19\" stop-opacity=\"0.68\"/>\n</linearGradient>\n</defs>\n</svg>`;\n\n\nexport { emptyStar, fullStar, halfStar };","import { emptyStar, fullStar, halfStar } from './stars';\n\nconst axios = require('axios').default;\n\nconst API_KEY = '992758a4802a699e8df27d4d6efc34fb';\nconst URL = 'https://api.themoviedb.org/3';\n\nconst weeklyTrendsList = document.querySelector('.weekly-trends__list');\n\nasync function getWeeklyTrends() {\n  const response = await axios.get(`${URL}/trending/all/week?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n}\n\nasync function doMarkup() {\n  const movies = await getWeeklyTrends();\n  let threeMovie = movies.slice(0, 3);\n  console.log(movies);\n\n  renderMoviesCards(threeMovie);\n}\n\ndoMarkup();\n\nexport default async function renderMoviesCards(movies) {\n  // в каталоге рендерится в ul c классом cards__list\n  const movieList = document.querySelector('.cards__list');\n  const POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\n  let markup = '';\n  for (const movie of movies) {\n    const {\n      id,\n      poster_path: poster,\n      title,\n      release_date: date,\n      vote_average: rating,\n    } = movie;\n\n    // Проверка на картинку, можно что-то придумать чтоб грузилось другое\n    if (poster === null || !poster) {\n      continue; // пропускаем фильм без картинки\n    }\n\n    const movieImg = POSTER_URL + poster;\n    const movieGenre = await getGenre(id);\n    const movieYear = await getYear(date);\n    const starRating = await createStarRating(rating);\n    // Надо добавить классы\n    markup += `<li class='weekly-trends__item'>\n                    <img class='weekly-trends__image' src='${movieImg}' alt='${title}' width='395' height='574' />\n                    <div class=\"weekly-trends__overlay\"></div>\n                    <div class='weekly-trends__desc'>\n                        \n                        <h3 class='weekly-trends__name'>${title}</h3>\n                        <div class='weekly-trends__data'>\n                        <p class='weekly-trends__ganre'>${movieGenre} <span class='weekly-trends__year'>${movieYear}</span></p>\n                        <div class='weekly-trends__stars'>${starRating}</div>\n                        </div>\n                    </div>\n                </li>`;\n  }\n\n  weeklyTrendsList.innerHTML = markup;\n}\n\n// Получает год из даты\nfunction getYear(data) {\n  if (!data) {\n    return 'There is no release date';\n  }\n\n  return (year = data.slice(0, 4));\n}\n\n// Получает жанры фильма\nasync function getGenre(movieId) {\n  const API_KEY = '992758a4802a699e8df27d4d6efc34fb';\n  const URL = 'https://api.themoviedb.org/3/movie/';\n\n  try {\n    const response = await axios.get(`${URL}${movieId}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    if (response.data.genres.length === 0) {\n      return error;\n    }\n\n    const genres = response.data.genres\n      .slice(0, 2)\n      .map(genre => genre.name)\n      .join(', ');\n\n    return genres;\n  } catch (error) {\n    console.log(error);\n    return 'There are no genres';\n  }\n}\n\n// Преобразует рейтинг в рейтинг из звезд\nfunction createStarRating(data) {\n  let ratingStars = '';\n\n  if (!data) {\n    ratingStars = `${emptyStar.repeat(5)}`;\n    return `<div>${ratingStars}</div>`;\n  }\n\n  const rating = Math.round(data);\n\n  switch (rating) {\n    case 0:\n      ratingStars = `${emptyStar.repeat(5)}`;\n      break;\n    case 1:\n      ratingStars = `${halfStar}${emptyStar.repeat(4)}`;\n      break;\n    case 2:\n      ratingStars = `${fullStar}${emptyStar.repeat(4)}`;\n      break;\n    case 3:\n      ratingStars = `${fullStar}${halfStar}${emptyStar.repeat(3)}`;\n      break;\n    case 4:\n      ratingStars = `${fullStar.repeat(2)}${emptyStar.repeat(3)}`;\n      break;\n    case 5:\n      ratingStars = `${fullStar.repeat(2)}${halfStar}${emptyStar.repeat(2)}`;\n      break;\n    case 6:\n      ratingStars = `${fullStar.repeat(3)}${emptyStar.repeat(2)}`;\n      break;\n    case 7:\n      ratingStars = `${fullStar.repeat(3)}${halfStar}${emptyStar}`;\n      break;\n    case 8:\n      ratingStars = `${fullStar.repeat(4)}${emptyStar}`;\n      break;\n    case 9:\n      ratingStars = `${fullStar.repeat(4)}${halfStar}`;\n      break;\n    case 10:\n      ratingStars = `${fullStar.repeat(5)}`;\n      break;\n    default:\n      throw new Error('Invalid rating');\n  }\n\n  return `<div>${ratingStars}</div>`;\n}\n"],"names":["$144aeb2db80114e2$export$2b9da15ffb823cb5","$144aeb2db80114e2$export$cf0b3d5a3c4c1ede","$144aeb2db80114e2$export$2f488d1c4c14505e","default","$d395fb91404b7f70$var$weeklyTrendsList","document","querySelector","$d395fb91404b7f70$var$getYear","data","year","slice","async","$d395fb91404b7f70$var$getGenre","movieId","response","$d395fb91404b7f70$require$axios","get","params","api_key","genres","length","error","map","genre","name","join","console","log","$d395fb91404b7f70$var$createStarRating","ratingStars","repeat","Math","round","Error","movies","results","$d395fb91404b7f70$var$getWeeklyTrends","threeMovie","POSTER_URL","markup","movie","id","poster_path","poster","title","release_date","date","vote_average","rating","innerHTML","$d395fb91404b7f70$export$2e2bcd8739ae039","$d395fb91404b7f70$var$doMarkup"],"version":3,"file":"index.7e01b7c4.js.map"}